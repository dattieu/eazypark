<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>backend.api</groupId>
  <artifactId>EazyPark</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>EazyPark REST API</name>
  <url>http://maven.apache.org</url>
  
  <!--  Internal POM properties -->
  <properties>
  	<springfox-swagger2.version>2.6.1</springfox-swagger2.version>
  	<springfox-swagger2-ui.version>2.4.0</springfox-swagger2-ui.version>
  	<jsonwebtoken.version>0.7.0</jsonwebtoken.version>
  	<hashId.version>1.0.2</hashId.version>
 	<junit.version>4.12</junit.version>
  	<hamcrest-library.version>1.3</hamcrest-library.version>
  	<log4j.version>1.2.17</log4j.version>
  	<logback.version>1.2.3</logback.version>
  	<jackson.version>2.8.9</jackson.version>
	<spring.version>4.3.7.RELEASE</spring.version>
	<spring.security.version>4.1.3.RELEASE</spring.security.version>
	<hibernate.version>4.3.6.Final</hibernate.version>
	<hibernate-validator.version>4.2.0.Final</hibernate-validator.version>
	<mysql.connector.version>5.1.31</mysql.connector.version>
	<servletapi.version>3.1.0</servletapi.version>
	<commons-fileupload.version>1.3.1</commons-fileupload.version>
  </properties>
  
  <dependencies>
  
  	<!-- Springfox Swagger -->
  	<dependency>
	    <groupId>io.springfox</groupId>
	    <artifactId>springfox-swagger2</artifactId>
	    <version>${springfox-swagger2.version}</version>
	</dependency>
	<dependency>
	    <groupId>io.springfox</groupId>
	    <artifactId>springfox-swagger-ui</artifactId>
	    <version>${springfox-swagger2-ui.version}</version>
	</dependency>
  
  	<!-- JSON Web Token -->
  	<dependency>
	    <groupId>io.jsonwebtoken</groupId>
	    <artifactId>jjwt</artifactId>
	    <version>${jsonwebtoken.version}</version>
	</dependency>
  
  	<!-- ID obfuscation -->
  	<dependency>
	  <groupId>org.hashids</groupId>
	  <artifactId>hashids</artifactId>
	  <version>${hashId.version}</version>
	</dependency>
  	
  	<!-- Testing -->
    <dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>${junit.version}</version>
	    <scope>test</scope>
	    <exclusions>
	        <exclusion>
	            <groupId>org.hamcrest</groupId>
	            <artifactId>hamcrest-core</artifactId>
	        </exclusion>
	    </exclusions>
	</dependency>
	<dependency>
	    <groupId>org.hamcrest</groupId>
	    <artifactId>hamcrest-library</artifactId>
	    <version>${hamcrest-library.version}</version>
	    <scope>test</scope>
	</dependency>
    <dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-test</artifactId>
	    <version>${spring.version}</version>
	    <scope>test</scope>
	</dependency>
	
    <!-- Logging framework Log4j -->
	<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>${log4j.version}</version>
	</dependency>
	<dependency>
	    <groupId>ch.qos.logback</groupId>
	    <artifactId>logback-classic</artifactId>
	    <version>${logback.version}</version>
	</dependency>
    
    <!-- JSON Mapper -->
    <dependency>
    	<groupId>com.fasterxml.jackson.core</groupId>
    	<artifactId>jackson-databind</artifactId>
    	<version>${jackson.version}</version>
  	</dependency>
  	<dependency>
  	    <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
    </dependency>
    <dependency>
	    <groupId>com.fasterxml.jackson.core</groupId>
	    <artifactId>jackson-core</artifactId>
	    <version>${jackson.version}</version>
	</dependency>
    
    <!-- Spring Core -->
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
    </dependency>
        
    <!-- Spring Beans -->
    <dependency>  
    	<groupId>org.springframework</groupId>  
    	<artifactId>spring-beans</artifactId>  
    	<version>${spring.version}</version>  
	</dependency>  
	
    <!-- Spring Context which provides core functionality -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${spring.version}</version>
	</dependency>
 
	<!-- Spring AOP module provides an AOP Alliance-compliant aspect-oriented 
			programming implementation allowing you to define -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${spring.version}</version>
	</dependency>
 
	<!-- Spring Web MVC module (also known as the Web-Servlet module) contains 
			Springâ€™s model-view-controller (MVC) and REST Web Services implementation 
			for web applications -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>${spring.version}</version>
	</dependency>
 
	<!-- Spring Web module provides basic web-oriented integration features 
			such as multipart file upload functionality and the initialization of the 
			IoC container using Servlet listeners and a web-oriented application context -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- Spring transaction management -->
	<dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
    </dependency>
	
	<!-- Spring ORM tool support -->
	<dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
    </dependency>
    
    <!-- Spring Aspect for AOP -->
    <dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aspects</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- Spring Security -->
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-web</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-config</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
     
    <!-- Hibernate -->
    <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.version}</version>
    </dependency>
    
    <!-- Hibernate Validator -->
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-validator</artifactId>
		<version>${hibernate-validator.version}</version>
	</dependency>
    
    <!-- Ehcache -->
    <dependency>
	    <groupId>org.hibernate</groupId>
	    <artifactId>hibernate-ehcache</artifactId>
	    <version>${hibernate.version}</version>
	</dependency>
    
    <!-- MySQL -->
    <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.connector.version}</version>
    </dependency>
    
    <!-- Servlet-API: for compile only, your container should have this -->
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>${servletapi.version}</version>
		<scope>provided</scope>
	</dependency>
	
	<!-- Apache Commons Upload -->
	<dependency>
		<groupId>commons-fileupload</groupId>
		<artifactId>commons-fileupload</artifactId>
		<version>${commons-fileupload.version}</version>
	</dependency>
    
  </dependencies>
  
  <build>
  	<pluginManagement>
    	<plugins>
    		<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
			<plugin>
	    		<groupId>org.apache.maven.plugins</groupId>
	    		<artifactId>maven-war-plugin</artifactId>
	    		<version>3.0.0</version>
	    		<configuration>
                	<warSourceDirectory>src/main/webapp</warSourceDirectory>
                    <warName>EazyPark</warName>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
               	</configuration>
			</plugin>
    	</plugins>
    </pluginManagement>
    <finalName>EazyPark</finalName>
  </build>
  
</project>
